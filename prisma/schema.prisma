generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider                          = "node node_modules/prisma-nestjs-graphql"
  output                            = "../src/@generated"
  purgeOutput                       = "true"
  graphqlScalars_DateTime_specifier = "graphql-scalars"
  graphqlScalars_BigInt_name        = "GraphQLBigInt"
  graphqlScalars_DateTime_name      = "GraphQLDateTime"
  fields_Validator_from             = "class-validator"
  graphqlScalars_BigInt_specifier   = "graphql-scalars"
  noTypeId                          = "true"
  fields_Validator_input            = "true"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model character {
  id             BigInt   @id @default(autoincrement())
  name           String   @unique(map: "UNIQUE") @db.VarChar(50)
  class          String   @db.VarChar(50)
  level          Int      @db.TinyInt
  item_level     Float    @db.Float
  guild_name     String?  @db.VarChar(50)
  server_name    String   @db.VarChar(50)
  image_uri      String   @db.VarChar(512)
  attack_power   Int
  max_health     Int
  critical       Int      @db.SmallInt
  specialization Int      @db.SmallInt
  domination     Int      @db.SmallInt
  swiftness      Int      @db.SmallInt
  endurance      Int      @db.SmallInt
  expertise      Int      @db.SmallInt
  wisdom         Int      @db.SmallInt
  courage        Int      @db.SmallInt
  charisma       Int      @db.SmallInt
  kindness       Int      @db.SmallInt
  ins_date       DateTime @default(now()) @db.DateTime(0)
  upd_date       DateTime @default(now()) @db.DateTime(0)
  character_accessory character_accessory[]
  character_gear      character_gear[]
  character_gem       character_gem[]
  character_engraving character_engraving[]
  character_skill     character_skill[]
}

model character_accessory {
  id                BigInt  @id @default(autoincrement())
  character_id      BigInt
  character         character @relation(fields: [character_id], references: [id])
  item_id           BigInt
  item              item      @relation(fields: [item_id], references: [id])
  slot              Int     @db.TinyInt
  quality           Int?    @db.TinyInt
  base_effect       String? @db.VarChar(100)
  additional_effect String? @db.VarChar(100)
  bracelet_effect   String? @db.VarChar(300)
  engraving         String? @db.VarChar(200)

  @@unique([character_id, slot], map: "SUPER")
}

model character_gear {
  id                BigInt  @id @default(autoincrement())
  character_id      BigInt
  character         character @relation(fields: [character_id], references: [id])
  item_id           BigInt
  item              item      @relation(fields: [item_id], references: [id])
  slot              Int     @db.TinyInt
  honing            Int     @db.TinyInt
  quality           Int     @db.TinyInt
  base_effect       String? @db.VarChar(150)
  additional_effect String? @db.VarChar(150)

  @@unique([character_id, slot], map: "SUPER")
}

model character_gem {
  id           BigInt @id @default(autoincrement())
  character_id      BigInt
  character         character @relation(fields: [character_id], references: [id])
  item_id           BigInt
  item              item      @relation(fields: [item_id], references: [id])
  slot         Int    @db.TinyInt
  level        Int    @db.TinyInt
  skill        String @db.VarChar(100)
  rate         Int    @db.TinyInt
  effect_type  String @db.VarChar(20)
  direction    String @db.VarChar(10)

  @@unique([character_id, slot], map: "SUPER")
}

model character_engraving {
  id           BigInt @id @default(autoincrement())
  character_id BigInt
  character         character @relation(fields: [character_id], references: [id])
  engraving_id BigInt
  engraving         engraving @relation(fields: [engraving_id], references: [id])
  slot         Int    @db.TinyInt
  level        Int    @db.TinyInt

  @@unique([character_id, slot], map: "SUPER")
}

model item {
  id        BigInt  @id @default(autoincrement())
  name      String  @unique(map: "UNIQUE") @db.VarChar(512)
  image_uri String  @db.VarChar(512)
  set_name  String? @db.VarChar(20)
  tier      Int?    @db.TinyInt
  character_accessory character_accessory[]
  character_gear      character_gear[]
  character_gem       character_gem[]
}

model engraving {
  id        BigInt   @id @default(autoincrement())
  name      String   @unique(map: "ENGRAVING_NAME") @db.VarChar(50)
  class_yn  class_yn @default(N)
  image_uri String   @db.VarChar(512)
  info      String   @db.VarChar(2000)
  character_engraving character_engraving[]
}

model ranking {
  id              BigInt   @id @default(autoincrement())
  character_id    BigInt
  rank            BigInt
  name            String   @db.VarChar(50)
  server_name     String   @db.VarChar(50)
  image_uri       String   @db.VarChar(512)
  weapon          String   @db.VarChar(50)
  class_engraving String   @db.VarChar(50)
  gear_set        String   @db.VarChar(50)
  main_stats      String   @db.VarChar(50)
  ins_date        DateTime @db.DateTime(0)
  upd_date        DateTime @db.DateTime(0)
}

model user {
  id            BigInt   @id @default(autoincrement())
  character_id  BigInt
  own_character String   @db.VarChar(500)
  ins_date      DateTime @db.DateTime(0)
  upd_date      DateTime @db.DateTime(0)
}

model character_skill {
  id           BigInt @id
  character_id BigInt
  character    character @relation(fields: [character_id], references: [id])
  skill_id     BigInt
  skill        skill @relation(fields: [skill_id], references: [id])
  rune_id      Int?
  level        Int?   @default(1) @db.TinyInt
  character_skill_tripod character_skill_tripod[]
}

model character_skill_tripod {
  id                 BigInt @id
  character_skill_id BigInt
  character_skill    character_skill @relation(fields: [character_skill_id], references: [id])
  tripod_id          BigInt
  tripod             tripod @relation(fields: [tripod_id], references: [id])
  level              Int?   @default(1) @db.TinyInt
  tier               Int    @default(1) @db.TinyInt
}

model skill {
  id        BigInt  @id @default(autoincrement())
  name      String  @db.VarChar(50)
  image_uri String  @db.VarChar(512)
  class     String  @db.VarChar(50)
  info      String? @db.VarChar(2000)
  character_skill       character_skill[]
  skill_tripod          skill_tripod[]

  @@unique([name, class], map: "SUPER")
}

model skill_tripod {
  id        BigInt @id
  skill_id  BigInt
  skill     skill @relation(fields: [skill_id], references: [id])
  tripod_id BigInt
  tripod    tripod @relation(fields: [tripod_id], references: [id])
  effect    String @db.VarChar(1000)
  tier      Int    @default(1) @db.TinyInt
}

model tripod {
  id        BigInt @id
  name      String @db.VarChar(50)
  image_uri String @db.VarChar(512)
  character_skill_tripod    character_skill_tripod[]
  skill_tripod              skill_tripod[]
}

enum class_yn {
  Y
  N
}
